query.role.select = select id, title from role
query.role.bytitle = select id, title from role where title = ?
query.user.check = select u.id, u.name, u.login, u.password, r.id as roleId, r.title from users u inner join role r on u.role = r.id where u.login = ? and u.password = ?
query.user.select = select u.id, u.name, u.login, u.password, r.id as roleId, r.title from users u inner join role r on u.role = r.id
query.user.expert.select = select u.id, u.name, u.login, u.password, r.id as roleId, r.title from users u inner join role r on u.role = r.id where r.id = 3
query.user.add = insert into users(name, login, password, role) values (?,?,?,?)
query.user.update = update users set name = ?, login = ?, password = ? where id = ?
query.user.delete = delete from users where id = ?
query.user.getbyid = select u.id, u.name, u.login, u.password, r.id as roleId, r.title from users u inner join role r on u.role = r.id where u.id = ?
query.jobtype.select = select id, title from jobtype
query.jobtype.add = insert into jobtype(title) values (?)
query.state.select = select id, title from state
query.state.add = insert into state(title) values (?)
query.jobrequest.select = select r.id as reqid, r.startdate, r.enddate, t.id as typeid, t.title as typetitle, description, s.id as stateid, s.title as statetitle, r.initiator from jobrequest r inner join jobtype t on r.jobtype = t.id inner join state s on s.id = r.state
query.jobrequest.select.user = select r.id as reqid, r.startdate, r.enddate, t.id as typeid, t.title as typetitle, description, s.id as stateid, s.title as statetitle, r.initiator from jobrequest r inner join jobtype t on r.jobtype = t.id inner join state s on s.id = r.state where r.initiator = ? order by stateid
query.jobrequest.select.noexperts = select r.id as reqid, r.startdate, r.enddate, t.id as typeid, t.title as typetitle, description, s.id as stateid, s.title as statetitle, r.initiator from jobrequest r inner join jobtype t on r.jobtype = t.id inner join state s on s.id = r.state where r.id not in (select jobid from expertgroup)
query.jobrequest.select.byid = select r.id as reqid, r.startdate, r.enddate, t.id as typeid, t.title as typetitle, description, s.id as stateid, s.title as statetitle, r.initiator from jobrequest r inner join jobtype t on r.jobtype = t.id inner join state s on s.id = r.state where r.id = ?
query.jobrequest.add = insert into jobrequest(startdate, enddate, jobtype, description, state, initiator, expertcount, approvecount, refusecount) values (?,?,?,?,1,?,0,0,0)
query.expertgroup.addexpert = insert into expertgroup (jobid, expertid, decision) values (?, ?, 1)
query.jobrequest.update.state.onexpert = update jobrequest set state = 2 where id = ?
query.jobrequest.select.forexpertconfirm = select r.id as reqid, r.startdate, r.enddate, t.id as typeid, t.title as typetitle, description, s.id as stateid, s.title as statetitle, r.initiator from jobrequest r inner join jobtype t on r.jobtype = t.id inner join state s on s.id = r.state inner join expertgroup g on g.jobid = r.id where g.expertid = ? and r.state <> 3 and r.state <> 4
query.expertgroup.approve = update expertgroup set decision = 2 where expertId = ? and jobId = ?
query.expertgroup.refuse = update expertgroup set decision = 3 where expertId = ? and jobId = ?
query.jobrequest.set.expertcount = update jobrequest set expertcount = ? where id = ?
query.jobrequest.set.approvecount = update jobrequest set approvecount = approvecount + 1 where id = ?
query.jobrequest.set.refusecount = update jobrequest set refusecount = refusecount + 1 where id = ?
query.expertgroup.decision.count = select id, decision, count(decision) as count from JOBREQUEST r inner join EXPERTGROUP g on r.id = g.jobid where state = 2 and initiator = ? group by id, decision
query.jobrequest.update.entity = update jobrequest set startdate = ?, enddate = ?, description = ? where id =?
query.jobrequest.set.confirm.state = update jobrequest set state = 3 where (approvecount > refusecount) and ((approvecount + refusecount) > expertcount)
query.jobrequest.set.refuse.state = update jobrequest set state = 4 where (approvecount < refusecount) and ((approvecount + refusecount) > expertcount)


